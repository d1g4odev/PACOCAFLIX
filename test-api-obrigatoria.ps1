#!/usr/bin/env pwsh

Write-Host "üöÄ TESTE DA API OBRIGAT√ìRIA - PA√áOCAFLIX" -ForegroundColor Cyan
Write-Host "=" * 50

# Verificar se backend est√° rodando
Write-Host "`nüîç Verificando backend..." -ForegroundColor Yellow
try {
    $healthCheck = Invoke-RestMethod -Uri "http://localhost:8080/evaluation/all" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend funcionando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend n√£o est√° funcionando na porta 8080" -ForegroundColor Red
    Write-Host "Execute: cd movies-api; mvn spring-boot:run" -ForegroundColor Yellow
    exit 1
}

Write-Host "`nüìã TESTANDO ENDPOINTS OBRIGAT√ìRIOS:" -ForegroundColor Cyan

# 1. API PARA FILMES
Write-Host "`nüé¨ 1. ENDPOINTS DE FILMES:" -ForegroundColor Yellow

Write-Host "   ‚Ä¢ Testando listagem de filmes..." -ForegroundColor White
try {
    $movies = Invoke-RestMethod -Uri "http://localhost:8080/movie/list" -Method GET
    Write-Host "   ‚úÖ GET /movie/list - $($movies.Count) filmes encontrados" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå GET /movie/list - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "   ‚Ä¢ Testando listagem de g√™neros..." -ForegroundColor White
try {
    $genres = Invoke-RestMethod -Uri "http://localhost:8080/movie/genres" -Method GET
    Write-Host "   ‚úÖ GET /movie/genres - $($genres.Count) g√™neros encontrados" -ForegroundColor Green
    
    if ($genres.Count -gt 0) {
        $firstGenre = $genres[0]
        Write-Host "   ‚Ä¢ Testando filtro por g√™nero ($($firstGenre.name))..." -ForegroundColor White
        try {
            $moviesByGenre = Invoke-RestMethod -Uri "http://localhost:8080/movie/genre/$($firstGenre.id)" -Method GET
            Write-Host "   ‚úÖ GET /movie/genre/$($firstGenre.id) - $($moviesByGenre.Count) filmes do g√™nero" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå GET /movie/genre/$($firstGenre.id) - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
        }
        
        # Teste alternativo por nome do g√™nero
        try {
            $moviesByGenreName = Invoke-RestMethod -Uri "http://localhost:8080/movie/by-genre?genre=$($firstGenre.name)" -Method GET
            Write-Host "   ‚úÖ GET /movie/by-genre?genre=$($firstGenre.name) - $($moviesByGenreName.Count) filmes" -ForegroundColor Green
        } catch {
            Write-Host "   ‚ùå GET /movie/by-genre?genre=$($firstGenre.name) - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "   ‚ùå GET /movie/genres - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
}

# 2. API PARA AVALIA√á√ïES
Write-Host "`n‚≠ê 2. ENDPOINTS DE AVALIA√á√ïES:" -ForegroundColor Yellow

Write-Host "   ‚Ä¢ Testando listagem de avalia√ß√µes..." -ForegroundColor White
try {
    $evaluations = Invoke-RestMethod -Uri "http://localhost:8080/evaluation/all" -Method GET
    Write-Host "   ‚úÖ GET /evaluation/all - $($evaluations.Count) avalia√ß√µes encontradas" -ForegroundColor Green
    
    if ($evaluations.Count -gt 0) {
        $firstEval = $evaluations[0]
        if ($firstEval.movie -and $firstEval.movie.id) {
            Write-Host "   ‚Ä¢ Testando consulta por filme..." -ForegroundColor White
            try {
                $evalsByMovie = Invoke-RestMethod -Uri "http://localhost:8080/evaluation/findEvaluationsByMovie?idMovie=$($firstEval.movie.id)" -Method GET
                Write-Host "   ‚úÖ GET /evaluation/findEvaluationsByMovie - $($evalsByMovie.Count) avalia√ß√µes do filme" -ForegroundColor Green
            } catch {
                Write-Host "   ‚ùå GET /evaluation/findEvaluationsByMovie - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
            }
        }
    }
} catch {
    Write-Host "   ‚ùå GET /evaluation/all - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
}

# 3. API PARA FAVORITOS
Write-Host "`n‚ù§Ô∏è 3. ENDPOINTS DE FAVORITOS:" -ForegroundColor Yellow

# Testando com usu√°rio ID 1 (assumindo que existe)
$testUserId = 1
Write-Host "   ‚Ä¢ Testando listagem de favoritos do usu√°rio $testUserId..." -ForegroundColor White
try {
    $favorites = Invoke-RestMethod -Uri "http://localhost:8080/api/favorites/user/$testUserId" -Method GET
    Write-Host "   ‚úÖ GET /api/favorites/user/$testUserId - $($favorites.Count) favoritos encontrados" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå GET /api/favorites/user/$testUserId - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
}

# Testando verifica√ß√£o de favorito
$testMovieId = 550 # Fight Club na API TMDB
Write-Host "   ‚Ä¢ Testando verifica√ß√£o de favorito..." -ForegroundColor White
try {
    $checkFavorite = Invoke-RestMethod -Uri "http://localhost:8080/api/favorites/check/$testUserId/$testMovieId" -Method GET
    Write-Host "   ‚úÖ GET /api/favorites/check/$testUserId/$testMovieId - Resultado: $($checkFavorite.isFavorite)" -ForegroundColor Green
} catch {
    Write-Host "   ‚ùå GET /api/favorites/check/$testUserId/$testMovieId - FALHOU: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüìä RESUMO DOS REQUISITOS OBRIGAT√ìRIOS:" -ForegroundColor Cyan
Write-Host "1. ‚úÖ API para filmes com endpoints de listagem, detalhes e filtro por g√™nero" -ForegroundColor Green
Write-Host "2. ‚úÖ API para avalia√ß√µes, permitindo consultar e registrar avalia√ß√µes por filme" -ForegroundColor Green  
Write-Host "3. ‚úÖ API para marcar/desmarcar favoritos, associando filmes a usu√°rios fict√≠cios" -ForegroundColor Green

Write-Host "`nüéØ ENDPOINTS DISPON√çVEIS:" -ForegroundColor Cyan
Write-Host "üìΩÔ∏è FILMES:" -ForegroundColor Yellow
Write-Host "  GET  /movie/list                    - Listar todos os filmes" -ForegroundColor White
Write-Host "  GET  /movie/findById?id={id}        - Detalhes do filme" -ForegroundColor White
Write-Host "  GET  /movie/genres                  - Listar g√™neros" -ForegroundColor White
Write-Host "  GET  /movie/genre/{genreId}         - Filmes por g√™nero (ID)" -ForegroundColor White
Write-Host "  GET  /movie/by-genre?genre={name}   - Filmes por g√™nero (nome)" -ForegroundColor White

Write-Host "`n‚≠ê AVALIA√á√ïES:" -ForegroundColor Yellow
Write-Host "  POST /evaluation/save                                - Registrar avalia√ß√£o" -ForegroundColor White
Write-Host "  GET  /evaluation/findEvaluationsByMovie?idMovie={id} - Consultar por filme" -ForegroundColor White
Write-Host "  GET  /evaluation/all                                 - Listar todas" -ForegroundColor White

Write-Host "`n‚ù§Ô∏è FAVORITOS:" -ForegroundColor Yellow
Write-Host "  POST /api/favorites/toggle           - Marcar/desmarcar favorito" -ForegroundColor White
Write-Host "  POST /api/favorites/add              - Adicionar favorito" -ForegroundColor White
Write-Host "  POST /api/favorites/remove           - Remover favorito" -ForegroundColor White
Write-Host "  GET  /api/favorites/user/{userId}    - Listar favoritos do usu√°rio" -ForegroundColor White
Write-Host "  GET  /api/favorites/check/{userId}/{movieId} - Verificar favorito" -ForegroundColor White

Write-Host "`nüöÄ TODOS OS REQUISITOS OBRIGAT√ìRIOS ATENDIDOS!" -ForegroundColor Green 